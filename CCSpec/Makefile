include common.mk

OBJECTS := libthreads.o schedule.o model.o threads.o librace.o action.o \
	   nodestack.o clockvector.o main.o snapshot-interface.o cyclegraph.o \
	   datarace.o impatomic.o cmodelint.o \
	   snapshot.o malloc.o mymemory.o common.o mutex.o promise.o conditionvariable.o \
	   context.o scanalysis.o execution.o plugins.o libannotate.o \
	   linearizable_NEW.o LexicalAnalyzer.o Parser.o CodeGenerator.o VM.o History.o #CLP ADDED

USER := christina

CPPFLAGS += -Iinclude -I. -I/usr/local/include/boost/ #-I/home/christina/Downloads/boost_1_58_0/
LDFLAGS := -ldl -lrt -rdynamic -pthread
SHARED := -shared

# Mac OSX options
ifeq ($(UNAME), Darwin)
LDFLAGS := -ldl
SHARED := -Wl,-undefined,dynamic_lookup -dynamiclib
endif

TESTS_DIR := test

#CLP ADDED
PARSER_DIR := LCDC
HISTORY_GEN_DIR := LCDC/SEQ_HISTORY

MARKDOWN := doc/Markdown/Markdown.pl

all: $(LIB_SO) tests parser history_gen 
#README.html 
#CLP ADDED parser

debug: CPPFLAGS += -DCONFIG_DEBUG
debug: all

PHONY += docs
docs: *.c *.cc *.h 
	doxygen
#README.html

#README.html: README.md
#	$(MARKDOWN) $< > $@

$(LIB_SO): $(OBJECTS)
	$(CXX) $(SHARED) -o $(LIB_SO) $+ $(LDFLAGS) -L/usr/local/lib -lboost_serialization #-static 

malloc.o: malloc.c
	$(CC) -fPIC -c malloc.c -DMSPACES -DONLY_MSPACES -DHAVE_MMAP=0 $(CPPFLAGS) -Wno-unused-variable
	
%.o: %.cc
	$(CXX) -MMD -MF .$@.d -fPIC -c $< $(CPPFLAGS) 

%.pdf: %.dot
	dot -Tpdf $< -o $@

-include $(OBJECTS:%=.%.d)

PHONY += clean
clean:
	rm -f *.o *.so .*.d *.pdf *.dot
	$(MAKE) -C $(TESTS_DIR) clean
	$(MAKE) -C $(PARSER_DIR) clean
	$(MAKE) -C $(HISTORY_GEN_DIR) clean

PHONY += mrclean
mrclean: clean
	rm -rf docs

PHONY += tags
tags:
	ctags -R

PHONY += tests
tests: $(LIB_SO)
	$(MAKE) -C $(TESTS_DIR)

#CLP ADDED
PHONY += parser
parser: $(LIB_SO)
	$(MAKE) -C $(PARSER_DIR)

PHONY += parser
history_gen: $(LIB_SO)
	$(MAKE) -C $(HISTORY_GEN_DIR)

BENCH_DIR := experiments

PHONY += experiments
experiments: $(LIB_SO)
	@if ! test -d $(BENCH_DIR); then \
		echo "Directory $(BENCH_DIR) does not exist" && \
		echo "Please clone the experiments repository" && \
		echo && \
		exit 1; \
	fi
	$(MAKE) -C $(BENCH_DIR)

PHONY += pdfs
pdfs: $(patsubst %.dot,%.pdf,$(wildcard *.dot))

.PHONY: $(PHONY)

# A 1-inch margin PDF generated by 'pandoc'
%.pdf: %.md
	pandoc -o $@ $< -V header-includes='\usepackage[margin=1in]{geometry}'
